# This workflow will build and push the SmartSuiteX website to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli#create-a-project-zip-file

name: Build and deploy SmartSuiteX to Azure Web App

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'SmartSuiteX'    # Azure app name from msdeploySite in publish profile
  AZURE_WEBAPP_PACKAGE_PATH: '.'         # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18.x'                   # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          smartsuitex-website/shadcn-ui/package-lock.json

    - name: Install root dependencies
      run: |
        if [ -f package-lock.json ]; then npm ci; else npm install; fi

    - name: Install React app dependencies
      run: |
        cd smartsuitex-website/shadcn-ui
        if [ -f package-lock.json ]; then npm ci; else npm install; fi

    - name: Build SmartSuiteX React application
      run: cd smartsuitex-website/shadcn-ui && npm run build

    - name: Create deployment package
      run: |
        mkdir -p deployment
        # Copy built React app files
        if [ -d "smartsuitex-website/shadcn-ui/dist" ]; then
          cp -r smartsuitex-website/shadcn-ui/dist/* deployment/
        else
          echo "Build directory not found!"
          exit 1
        fi
        # Copy web.config for Azure App Service
        if [ -f "web.config" ]; then
          cp web.config deployment/
        fi
        # List contents for debugging
        echo "Deployment directory contents:"
        ls -la deployment/

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: deployment
        retention-days: 1

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app
        path: ./deployment

    - name: List downloaded files
      run: |
        echo "Downloaded files:"
        ls -la ./deployment/

    - name: 'Deploy to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        package: './deployment'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}